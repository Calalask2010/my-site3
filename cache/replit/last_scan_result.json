{"gitHash":"d005bc35ca62834a0f083bc0e2fbcb568407b840","result":{"ae1e85edb950475b372886323a86cda03f1745ee23989d2c30bcc60ba279204db7f4fed2d29af3c20a4ee5a7db75cf5c97a514131fa4638394995a94b74c6cc8_0":{"kind":"sast","location":{"path":"app.py","start":{"line":58,"col":5},"end":{"line":58,"col":51},"lines":"    app.run(host='0.0.0.0', port=5000, debug=True)"},"checkId":"config..semgrep.vendored-rules.python.flask.security.audit.avoid_app_run_with_bad_host","message":"Running flask app with host 0.0.0.0 could expose the server publicly.","severity":"MEDIUM","fingerprint":"ae1e85edb950475b372886323a86cda03f1745ee23989d2c30bcc60ba279204db7f4fed2d29af3c20a4ee5a7db75cf5c97a514131fa4638394995a94b74c6cc8_0"},"02d3345a06f51164a46344efbf76b42a6a99d28277a21abfc9472d3e328408b28b239c943ddaed3fe92d9aa04f195fa8262f23114a0123f063dfd6f87a459e6b_0":{"kind":"sast","location":{"path":"app.py","start":{"line":58,"col":5},"end":{"line":58,"col":51},"lines":"    app.run(host='0.0.0.0', port=5000, debug=True)"},"checkId":"config..semgrep.vendored-rules.python.flask.security.audit.debug-enabled","message":"Detected Flask app with debug=True. Do not deploy to production with this flag enabled as it will leak sensitive information. Instead, consider using Flask configuration variables or setting 'debug' using system environment variables.","severity":"MEDIUM","fingerprint":"02d3345a06f51164a46344efbf76b42a6a99d28277a21abfc9472d3e328408b28b239c943ddaed3fe92d9aa04f195fa8262f23114a0123f063dfd6f87a459e6b_0"},"5c1cbbc54bfaa7420b881ae9f997ad4b5ed5aa16b127a74e037d220112ac891aa501638c0e19641f765822573b5e6f14657485c6b72c0846fdec9bc63200dc57_0":{"kind":"sast","location":{"path":"main.py","start":{"line":4,"col":5},"end":{"line":4,"col":51},"lines":"    app.run(host='0.0.0.0', port=5000, debug=True)"},"checkId":"config..semgrep.vendored-rules.python.flask.security.audit.avoid_app_run_with_bad_host","message":"Running flask app with host 0.0.0.0 could expose the server publicly.","severity":"MEDIUM","fingerprint":"5c1cbbc54bfaa7420b881ae9f997ad4b5ed5aa16b127a74e037d220112ac891aa501638c0e19641f765822573b5e6f14657485c6b72c0846fdec9bc63200dc57_0"},"2fb9f35e57b5ed1321466d0fef7dd0b1faf3481ff577842519c16e969ed8697f1a6738ee2cd879487c692dc2c51fec9aa1782fd1518dd413015336c09d6dfafd_0":{"kind":"sast","location":{"path":"templates/base.html","start":{"line":9,"col":5},"end":{"line":9,"col":107},"lines":"    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">"},"checkId":"config..semgrep.vendored-rules.html.security.audit.missing-integrity","message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","severity":"MEDIUM","fingerprint":"2fb9f35e57b5ed1321466d0fef7dd0b1faf3481ff577842519c16e969ed8697f1a6738ee2cd879487c692dc2c51fec9aa1782fd1518dd413015336c09d6dfafd_0"},"43c8e0dab19b2f7ccfb817176d2c76ae7977830847c6bb5b1dc435f3b36dd82b73a7ffb1abe66a7dc16d8e37d5887bfb1394cc332e73ee800bc338c3b4e5b96f_0":{"kind":"sast","location":{"path":"templates/base.html","start":{"line":11,"col":5},"end":{"line":11,"col":109},"lines":"    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\">"},"checkId":"config..semgrep.vendored-rules.html.security.audit.missing-integrity","message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","severity":"MEDIUM","fingerprint":"43c8e0dab19b2f7ccfb817176d2c76ae7977830847c6bb5b1dc435f3b36dd82b73a7ffb1abe66a7dc16d8e37d5887bfb1394cc332e73ee800bc338c3b4e5b96f_0"},"ccf2a5618405aa65d20e9f14f7e070245edf477a44ebd15c339d2006a46780ed729dc0a4f58182deda6e7a0bcdece48b09eb7b093c16e481308ea4c348f00281_0":{"kind":"sast","location":{"path":"templates/base.html","start":{"line":78,"col":5},"end":{"line":78,"col":105},"lines":"    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>"},"checkId":"config..semgrep.vendored-rules.html.security.audit.missing-integrity","message":"This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you’re telling the browser to fetch in the 'integrity' attribute for all externally hosted files.","severity":"MEDIUM","fingerprint":"ccf2a5618405aa65d20e9f14f7e070245edf477a44ebd15c339d2006a46780ed729dc0a4f58182deda6e7a0bcdece48b09eb7b093c16e481308ea4c348f00281_0"},"222c09c230093233e6db3b14ca1dec3c4148ccdbd347fe61c99519f77dd812b52d57fefb73c757411635f16a06489a349834457910d9355ba3b0adf0aca06bfe_0":{"kind":"sast","location":{"path":"templates/base.html","start":{"line":80,"col":18},"end":{"line":80,"col":66},"lines":"    <script src=\"{{ url_for('static', filename='js/script.js') }}\"></script>"},"checkId":"config..semgrep.vendored-rules.javascript.express.security.audit.xss.mustache.var-in-script-tag","message":"Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI.","severity":"MEDIUM","fingerprint":"222c09c230093233e6db3b14ca1dec3c4148ccdbd347fe61c99519f77dd812b52d57fefb73c757411635f16a06489a349834457910d9355ba3b0adf0aca06bfe_0"},"c3eeaf5545717dccf2733e4a50fcf924e10dc72ecdc3ace8d0f00011487e5b7627a6e368924d819da0be6ab386c99353baad8a5ab982e74a5143e1e16da4a86c_0":{"kind":"sast","location":{"path":"templates/blog.html","start":{"line":26,"col":21},"end":{"line":26,"col":44},"lines":"                    {{ post.content|safe }}"},"checkId":"config..semgrep.vendored-rules.python.flask.security.xss.audit.template-unescaped-with-safe","message":"Detected a segment of a Flask template where autoescaping is explicitly disabled with '| safe' filter. This allows rendering of raw HTML in this segment. Ensure no user data is rendered here, otherwise this is a cross-site scripting (XSS) vulnerability.","severity":"MEDIUM","fingerprint":"c3eeaf5545717dccf2733e4a50fcf924e10dc72ecdc3ace8d0f00011487e5b7627a6e368924d819da0be6ab386c99353baad8a5ab982e74a5143e1e16da4a86c_0"},"f71dbf0d1c19b75f284d53603d242cd2c70fc56acfe1ed6005d6090a08e623231642fa2ad8fa99442881970e58353875cbbc0a6eb6b99da2c7084cc805f90aff_0":{"kind":"sast","location":{"path":"templates/portfolio.html","start":{"line":74,"col":32},"end":{"line":74,"col":61},"lines":"                            <a href=\"{{ item.project_url }}\" target=\"_blank\" class=\"portfolio-link\">"},"checkId":"config..semgrep.vendored-rules.generic.html-templates.security.var-in-href","message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","severity":"MEDIUM","fingerprint":"f71dbf0d1c19b75f284d53603d242cd2c70fc56acfe1ed6005d6090a08e623231642fa2ad8fa99442881970e58353875cbbc0a6eb6b99da2c7084cc805f90aff_0"},"f71dbf0d1c19b75f284d53603d242cd2c70fc56acfe1ed6005d6090a08e623231642fa2ad8fa99442881970e58353875cbbc0a6eb6b99da2c7084cc805f90aff_1":{"kind":"sast","location":{"path":"templates/portfolio.html","start":{"line":123,"col":32},"end":{"line":123,"col":61},"lines":"                            <a href=\"{{ item.project_url }}\" target=\"_blank\" class=\"btn btn-primary\">"},"checkId":"config..semgrep.vendored-rules.generic.html-templates.security.var-in-href","message":"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=\"/{{link}}\"`). You may also consider setting the Content Security Policy (CSP) header.","severity":"MEDIUM","fingerprint":"f71dbf0d1c19b75f284d53603d242cd2c70fc56acfe1ed6005d6090a08e623231642fa2ad8fa99442881970e58353875cbbc0a6eb6b99da2c7084cc805f90aff_1"},"9268e5d0fa382c112f230d3db7b544fc2f81ba530a773d1cbcd2b3039b17c37852429502ed259e15e9b5d7f16aa3b294721fc7b6ce91c43951ad909a1ab81fcf_0":{"kind":"sast","location":{"path":"templates/portfolio.html","start":{"line":158,"col":14},"end":{"line":158,"col":65},"lines":"<script src=\"{{ url_for('static', filename='js/portfolio.js') }}\"></script>"},"checkId":"config..semgrep.vendored-rules.javascript.express.security.audit.xss.mustache.var-in-script-tag","message":"Detected a template variable used in a script tag. Although template variables are HTML escaped, HTML escaping does not always prevent cross-site scripting (XSS) attacks when used directly in JavaScript. If you need this data on the rendered page, consider placing it in the HTML portion (outside of a script tag). Alternatively, use a JavaScript-specific encoder, such as the one available in OWASP ESAPI.","severity":"MEDIUM","fingerprint":"9268e5d0fa382c112f230d3db7b544fc2f81ba530a773d1cbcd2b3039b17c37852429502ed259e15e9b5d7f16aa3b294721fc7b6ce91c43951ad909a1ab81fcf_0"}}}